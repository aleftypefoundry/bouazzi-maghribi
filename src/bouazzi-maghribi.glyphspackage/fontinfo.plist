{
.appVersion = "3327";
.formatVersion = 3;
date = "2021-12-17 12:54:43 +0000";
familyName = "Bouazzi Maghribi";
featurePrefixes = (
{
automatic = 1;
code = "languagesystem DFLT dflt;

languagesystem arab dflt;
";
name = Languagesystems;
}
);
features = (
{
automatic = 1;
code = "feature init;
feature medi;
feature fina;
";
tag = aalt;
},
{
automatic = 1;
code = "lookup ccmp_arab_1 {
	sub hamzaabove-ar damma-ar by hamzaaboveDamma-ar;
	sub damma-ar hamzaabove-ar by hamzaaboveDamma-ar;
	sub hamzaabove-ar dammatan-ar by hamzaaboveDammatan-ar;
	sub dammatan-ar hamzaabove-ar by hamzaaboveDammatan-ar;
	sub hamzaabove-ar fatha-ar by hamzaaboveFatha-ar;
	sub fatha-ar hamzaabove-ar by hamzaaboveFatha-ar;
	sub hamzaabove-ar fathatan-ar by hamzaaboveFathatan-ar;
	sub fathatan-ar hamzaabove-ar by hamzaaboveFathatan-ar;
	sub hamzaabove-ar sukun-ar by hamzaaboveSukun-ar;
	sub sukun-ar hamzaabove-ar by hamzaaboveSukun-ar;
	sub hamzabelow-ar kasra-ar by hamzabelowKasra-ar;
	sub kasra-ar hamzabelow-ar by hamzabelowKasra-ar;
	sub hamzabelow-ar kasratan-ar by hamzabelowKasratan-ar;
	sub kasratan-ar hamzabelow-ar by hamzabelowKasratan-ar;
	sub shadda-ar alefabove-ar by shaddaAlefabove-ar;
	sub alefabove-ar shadda-ar by shaddaAlefabove-ar;
	sub shadda-ar damma-ar by shaddaDamma-ar;
	sub damma-ar shadda-ar by shaddaDamma-ar;
	sub shadda-ar dammatan-ar by shaddaDammatan-ar;
	sub dammatan-ar shadda-ar by shaddaDammatan-ar;
	sub shadda-ar fatha-ar by shaddaFatha-ar;
	sub fatha-ar shadda-ar by shaddaFatha-ar;
	sub shadda-ar fathatan-ar by shaddaFathatan-ar;
	sub fathatan-ar shadda-ar by shaddaFathatan-ar;
	sub shadda-ar kasra-ar by shaddaKasra-ar;
	sub kasra-ar shadda-ar by shaddaKasra-ar;
	sub shadda-ar kasratan-ar by shaddaKasratan-ar;
	sub kasratan-ar shadda-ar by shaddaKasratan-ar;
} ccmp_arab_1;

script arab;
lookup ccmp_arab_1;
";
tag = ccmp;
},
{
automatic = 1;
code = "sub behDotless-ar by behDotless-ar.init;
sub beh-ar by beh-ar.init;
sub teh-ar by teh-ar.init;
sub theh-ar by theh-ar.init;
sub jeem-ar by jeem-ar.init;
sub hah-ar by hah-ar.init;
sub khah-ar by khah-ar.init;
sub seen-ar by seen-ar.init;
sub sheen-ar by sheen-ar.init;
sub sad-ar by sad-ar.init;
sub dad-ar by dad-ar.init;
sub tah-ar by tah-ar.init;
sub zah-ar by zah-ar.init;
sub ain-ar by ain-ar.init;
sub ghain-ar by ghain-ar.init;
sub feh-ar by feh-ar.init;
sub veh-ar by veh-ar.init;
sub fehDotless-ar by fehDotless-ar.init;
sub fehDotmovedbelow-ar by fehDotmovedbelow-ar.init;
sub qaf-ar by qaf-ar.init;
sub qafDotabove-ar by qafDotabove-ar.init;
sub kaf-ar by kaf-ar.init;
sub lam-ar by lam-ar.init;
sub meem-ar by meem-ar.init;
sub noon-ar by noon-ar.init;
sub heh-ar by heh-ar.init;
sub yeh-ar by yeh-ar.init;
sub yehHamzaabove-ar by yehHamzaabove-ar.init;
";
tag = init;
},
{
automatic = 1;
code = "sub behDotless-ar by behDotless-ar.medi;
sub beh-ar by beh-ar.medi;
sub teh-ar by teh-ar.medi;
sub theh-ar by theh-ar.medi;
sub jeem-ar by jeem-ar.medi;
sub hah-ar by hah-ar.medi;
sub khah-ar by khah-ar.medi;
sub seen-ar by seen-ar.medi;
sub sheen-ar by sheen-ar.medi;
sub sad-ar by sad-ar.medi;
sub dad-ar by dad-ar.medi;
sub tah-ar by tah-ar.medi;
sub zah-ar by zah-ar.medi;
sub ain-ar by ain-ar.medi;
sub ghain-ar by ghain-ar.medi;
sub feh-ar by feh-ar.medi;
sub veh-ar by veh-ar.medi;
sub fehDotless-ar by fehDotless-ar.medi;
sub fehDotmovedbelow-ar by fehDotmovedbelow-ar.medi;
sub qaf-ar by qaf-ar.medi;
sub qafDotabove-ar by qafDotabove-ar.medi;
sub kaf-ar by kaf-ar.medi;
sub lam-ar by lam-ar.medi;
sub meem-ar by meem-ar.medi;
sub noon-ar by noon-ar.medi;
sub heh-ar by heh-ar.medi;
sub yeh-ar by yeh-ar.medi;
sub yehHamzaabove-ar by yehHamzaabove-ar.medi;
";
tag = medi;
},
{
automatic = 1;
code = "sub alef-ar by alef-ar.fina;
sub alefHamzaabove-ar by alefHamzaabove-ar.fina;
sub alefHamzabelow-ar by alefHamzabelow-ar.fina;
sub alefMadda-ar by alefMadda-ar.fina;
sub alefWasla-ar by alefWasla-ar.fina;
sub behDotless-ar by behDotless-ar.fina;
sub beh-ar by beh-ar.fina;
sub teh-ar by teh-ar.fina;
sub theh-ar by theh-ar.fina;
sub jeem-ar by jeem-ar.fina;
sub hah-ar by hah-ar.fina;
sub khah-ar by khah-ar.fina;
sub dal-ar by dal-ar.fina;
sub thal-ar by thal-ar.fina;
sub reh-ar by reh-ar.fina;
sub zain-ar by zain-ar.fina;
sub seen-ar by seen-ar.fina;
sub sheen-ar by sheen-ar.fina;
sub sad-ar by sad-ar.fina;
sub dad-ar by dad-ar.fina;
sub tah-ar by tah-ar.fina;
sub zah-ar by zah-ar.fina;
sub ain-ar by ain-ar.fina;
sub ghain-ar by ghain-ar.fina;
sub feh-ar by feh-ar.fina;
sub veh-ar by veh-ar.fina;
sub fehDotless-ar by fehDotless-ar.fina;
sub fehDotmovedbelow-ar by fehDotmovedbelow-ar.fina;
sub qafDotless-ar by qafDotless-ar.fina;
sub qaf-ar by qaf-ar.fina;
sub qafDotabove-ar by qafDotabove-ar.fina;
sub kaf-ar by kaf-ar.fina;
sub lam-ar by lam-ar.fina;
sub meem-ar by meem-ar.fina;
sub noon-ar by noon-ar.fina;
sub noonghunna-ar by noonghunna-ar.fina;
sub heh-ar by heh-ar.fina;
sub tehMarbuta-ar by tehMarbuta-ar.fina;
sub waw-ar by waw-ar.fina;
sub wawHamzaabove-ar by wawHamzaabove-ar.fina;
sub alefMaksura-ar by alefMaksura-ar.fina;
sub yeh-ar by yeh-ar.fina;
sub yehHamzaabove-ar by yehHamzaabove-ar.fina;
sub lam_alef-ar by lam_alef-ar.fina;
sub lam_alefHamzaabove-ar by lam_alefHamzaabove-ar.fina;
sub lam_alefHamzabelow-ar by lam_alefHamzabelow-ar.fina;
sub lam_alefMadda-ar by lam_alefMadda-ar.fina;
sub lam_alefWasla-ar by lam_alefWasla-ar.fina;
";
tag = fina;
},
{
automatic = 1;
code = "script arab;
lookup rlig_arab_0 {
	lookupflag IgnoreMarks;
	sub lam-ar.init alef-ar.fina by lam_alef-ar;
	sub lam-ar.medi alef-ar.fina by lam_alef-ar.fina;
	sub lam-ar.init alefHamzaabove-ar.fina by lam_alefHamzaabove-ar;
	sub lam-ar.medi alefHamzaabove-ar.fina by lam_alefHamzaabove-ar.fina;
	sub lam-ar.init alefHamzabelow-ar.fina by lam_alefHamzabelow-ar;
	sub lam-ar.medi alefHamzabelow-ar.fina by lam_alefHamzabelow-ar.fina;
	sub lam-ar.init alefMadda-ar.fina by lam_alefMadda-ar;
	sub lam-ar.medi alefMadda-ar.fina by lam_alefMadda-ar.fina;
	sub lam-ar.init alefWasla-ar.fina by lam_alefWasla-ar;
	sub lam-ar.medi alefWasla-ar.fina by lam_alefWasla-ar.fina;
} rlig_arab_0;
";
tag = rlig;
},
{
automatic = 1;
code = "lookup dlig_RTL {
lookupflag IgnoreMarks;
	sub hah-ar.init reh-ar.fina by hah_reh-ar;
	sub hah-ar.init zain-ar.fina by hah_zain-ar;
	sub heh-ar.init reh-ar.fina by heh_reh-ar;
	sub heh-ar.init zain-ar.fina by heh_zain-ar;
	sub jeem-ar.init reh-ar.fina by jeem_reh-ar;
	sub jeem-ar.init zain-ar.fina by jeem_zain-ar;
	sub khah-ar.init reh-ar.fina by khah_reh-ar;
	sub khah-ar.init zain-ar.fina by khah_zain-ar;
	sub lam-ar.init hah-ar.medi by lam_hah-ar.init;
	sub lam-ar.init jeem-ar.medi by lam_jeem-ar.init;
	sub lam-ar.init khah-ar.medi by lam_khah-ar.init;
} dlig_RTL;
";
tag = dlig;
}
);
fontMaster = (
{
guides = (
{
locked = 1;
pos = (495,52);
},
{
locked = 1;
pos = (599,0);
},
{
locked = 1;
pos = (543,-12);
},
{
locked = 1;
pos = (768,645);
}
);
id = m01;
metricValues = (
{
over = 16;
pos = 800;
},
{
over = -16;
},
{
over = -16;
pos = -200;
}
);
name = Regular;
userData = {
GSCornerRadius = 30;
GSOffsetAutoStroke = 1;
GSOffsetHorizontal = 23;
GSOffsetKeepCompatible = 1;
GSOffsetMakeStroke = 1;
GSOffsetPosition = 0;
GSOffsetProportional = 1;
GSOffsetVertical = 10;
};
}
);
instances = (
{
instanceInterpolations = {
m01 = 1;
};
name = Regular;
}
);
kerningRTL = {
m01 = {
"reh-ar" = {
"@MMK_L_middle-reh" = -140;
"@MMK_L_reh" = -180;
"@MMK_L_reh-reh" = -100;
"@MMK_L_teh-reh" = -180;
};
"reh-ar.fina" = {
"@MMK_L_middle-reh" = -140;
"@MMK_L_teh-reh" = -180;
};
"waw-ar" = {
"@MMK_L_middle-reh" = -140;
"@MMK_L_reh-reh" = -100;
"@MMK_L_teh-reh" = -140;
"@MMK_L_waw-yeh" = -100;
};
"waw-ar.fina" = {
"@MMK_L_middle-reh" = -140;
"@MMK_L_teh-reh" = -140;
};
"zain-ar" = {
"@MMK_L_middle-reh" = -140;
"@MMK_L_reh-reh" = -110;
};
"zain-ar.fina" = {
"@MMK_L_middle-reh" = -140;
};
};
};
metrics = (
{
type = ascender;
},
{
type = baseline;
},
{
type = descender;
}
);
properties = (
{
key = designers;
values = (
{
language = dflt;
value = "Mohamed Gallah";
}
);
},
{
key = designerURL;
value = "https://alef-type.com";
},
{
key = licenseURL;
value = "https://mit-license.org";
},
{
key = vendorID;
value = ALFT;
}
);
unitsPerEm = 1000;
userData = {
GSDimensionPlugin.Dimensions = {
m01 = {
};
};
backdropGlyphLib = {
AE = (
(
A,
1,
0
),
(
E,
1,
0
),
(
OE,
1,
0
)
);
B = (
(
D,
1,
0
),
(
E,
1,
0
),
(
H,
0,
0
),
(
P,
1,
0
),
(
R,
0,
0
),
(
Germandbls,
0,
0
),
(
germandbls,
0,
0
),
(
three,
0,
0
),
(
eight,
0,
0
)
);
C = (
(
D,
0,
0
),
(
G,
1,
0
),
(
O,
1,
0
),
(
Q,
0,
0
)
);
D = (
(
B,
0,
0
),
(
C,
0,
0
),
(
E,
0,
0
),
(
G,
0,
0
),
(
O,
1,
0
),
(
Q,
0,
0
)
);
E = (
(
B,
1,
0
),
(
D,
0,
0
),
(
F,
1,
0
),
(
H,
0,
0
)
);
Eng = (
(
N,
1,
0
),
(
j,
1,
0
)
);
F = (
(
E,
1,
0
),
(
H,
0,
0
)
);
G = (
(
A,
0,
0
),
(
C,
0,
0
),
(
D,
0,
0
),
(
H,
0,
0
),
(
O,
1,
0
),
(
Q,
0,
0
),
(
x,
0,
0
)
);
Germandbls = (
(
B,
1,
0
),
(
S,
1,
0
),
(
T,
0,
0
),
(
germandbls,
0,
0
)
);
H = (
(
B,
0,
0
),
(
D,
0,
0
),
(
E,
0,
0
),
(
F,
0,
0
),
(
I,
0,
0
),
(
J,
0,
0
),
(
K,
0,
0
),
(
L,
0,
0
),
(
M,
0,
0
),
(
N,
1,
0
),
(
P,
0,
0
),
(
R,
0,
0
),
(
U,
1,
0
)
);
I = (
(
B,
0,
0
),
(
D,
0,
0
),
(
E,
0,
0
),
(
F,
0,
0
),
(
H,
0,
0
),
(
J,
0,
0
),
(
K,
0,
0
),
(
L,
0,
0
),
(
M,
0,
0
),
(
N,
0,
0
),
(
P,
0,
0
),
(
R,
0,
0
),
(
T,
1,
0
),
(
U,
0,
0
),
(
Y,
1,
0
),
(
i,
0,
0
),
(
l,
1,
0
),
(
one,
1,
0
)
);
IJ = (
(
I,
0,
0
),
(
J,
1,
0
),
(
U,
1,
0
)
);
J = (
(
I,
1,
0
),
(
U,
0,
0
)
);
K = (
(
B,
0,
0
),
(
H,
0,
0
),
(
I,
1,
0
),
(
R,
0,
0
),
(
X,
0,
0
),
(
Y,
0,
0
)
);
L = (
(
E,
0,
0
),
(
H,
0,
0
),
(
I,
1,
0
)
);
M = (
(
H,
1,
0
),
(
I,
0,
0
),
(
O,
0,
0
),
(
N,
0,
0
),
(
V,
0,
0
),
(
W,
0,
0
)
);
N = (
(
H,
1,
0
),
(
I,
0,
0
),
(
M,
0,
0
),
(
U,
1,
0
)
);
O = (
(
C,
1,
0
),
(
D,
0,
0
),
(
G,
1,
0
),
(
Q,
1,
0
),
(
zero,
1,
0
)
);
OE = (
(
E,
1,
0
),
(
O,
1,
0
),
(
OE,
1,
0
)
);
Oslash = (
(
O,
1,
0
),
(
Q,
0,
0
)
);
P = (
(
B,
1,
0
),
(
F,
1,
0
),
(
R,
1,
0
)
);
Q = (
(
C,
0,
0
),
(
D,
0,
0
),
(
G,
0,
0
),
(
O,
1,
0
),
(
R,
0,
0
)
);
R = (
(
B,
0,
0
),
(
F,
0,
0
),
(
P,
1,
0
),
(
Q,
0,
0
),
(
X,
0,
0
)
);
T = (
(
H,
0,
0
),
(
I,
1,
0
),
(
Y,
1,
0
)
);
Thorn = (
(
D,
0,
0
),
(
H,
0,
0
),
(
I,
0,
0
),
(
P,
1,
0
)
);
U = (
(
H,
0,
0
),
(
N,
1,
0
),
(
O,
0,
0
),
(
V,
0,
0
)
);
V = (
(
U,
1,
0
),
(
W,
0,
0
),
(
X,
0,
0
),
(
Y,
1,
0
)
);
W = (
(
M,
0,
0
),
(
V,
0,
0
)
);
X = (
(
K,
0,
0
),
(
N,
0,
0
),
(
R,
0,
0
),
(
V,
0,
0
),
(
Y,
1,
0
),
(
Z,
1,
0
)
);
Y = (
(
I,
0,
0
),
(
T,
1,
0
),
(
U,
0,
0
),
(
V,
1,
0
),
(
W,
0,
0
),
(
X,
0,
0
)
);
Z = (
(
L,
0,
0
),
(
T,
0,
0
),
(
X,
0,
0
)
);
ae = (
(
a,
1,
0
),
(
e,
1,
0
),
(
o,
0,
0
),
(
oe,
1,
0
)
);
ampersand = (
(
E,
0,
0
),
(
t,
0,
0
)
);
at = (
(
a,
1,
0
)
);
b = (
(
c,
0,
0
),
(
e,
0,
0
),
(
h,
1,
0
),
(
k,
0,
0
),
(
l,
0,
0
),
(
o,
1,
0
),
(
p,
1,
0
)
);
c = (
(
b,
0,
0
),
(
d,
0,
0
),
(
e,
1,
0
),
(
g,
0,
0
),
(
o,
1,
0
),
(
p,
0,
0
),
(
q,
0,
0
)
);
cent = (
(
c,
1,
0
)
);
d = (
(
c,
0,
0
),
(
eth,
0,
0
),
(
e,
0,
0
),
(
l,
0,
0
),
(
o,
1,
0
),
(
q,
1,
0
)
);
dollar = (
(
S,
1,
0
)
);
e = (
(
b,
0,
0
),
(
c,
1,
0
),
(
d,
0,
0
),
(
g,
0,
0
),
(
o,
1,
0
),
(
p,
0,
0
),
(
q,
0,
0
)
);
eight = (
(
B,
0,
0
),
(
zero,
1,
0
),
(
three,
1,
0
),
(
six,
0,
0
),
(
nine,
0,
0
)
);
eng = (
(
j,
1,
0
),
(
m,
0,
0
),
(
n,
1,
0
)
);
estimated = (
(
e,
0,
0
)
);
eth = (
(
d,
1,
0
),
(
o,
1,
0
)
);
euro = (
(
C,
1,
0
)
);
exclam = (
(
I,
1,
0
),
(
T,
0,
0
),
(
one,
0,
0
),
(
period,
1,
0
),
(
question,
1,
0
)
);
f = (
(
l,
0,
0
),
(
longs,
0,
0
),
(
germandbls,
0,
0
),
(
t,
1,
0
)
);
five = (
(
six,
1,
0
)
);
florin = (
(
f,
1,
0
)
);
franc = (
(
F,
1,
0
)
);
g = (
(
c,
0,
0
),
(
e,
0,
0
),
(
o,
1,
0
),
(
q,
0,
0
)
);
germandbls = (
(
B,
1,
0
),
(
b,
0,
0
),
(
f,
1,
0
),
(
s,
1,
0
),
(
longs,
1,
0
)
);
h = (
(
b,
1,
0
),
(
k,
0,
0
),
(
l,
0,
0
),
(
m,
0,
0
),
(
n,
1,
0
),
(
r,
0,
0
)
);
i = (
(
I,
0,
0
),
(
j,
1,
0
),
(
l,
1,
0
),
(
n,
0,
0
)
);
idotless = (
(
I,
0,
0
),
(
i,
0,
0
),
(
j,
0,
0
),
(
uni0237,
0,
0
),
(
l,
1,
0
),
(
n,
0,
0
)
);
j = (
(
i,
1,
0
),
(
l,
0,
0
),
(
n,
0,
0
)
);
k = (
(
b,
1,
0
),
(
h,
0,
0
),
(
l,
0,
0
),
(
x,
1,
0
)
);
l = (
(
I,
1,
0
),
(
b,
0,
0
),
(
h,
0,
0
),
(
k,
0,
0
),
(
i,
0,
0
),
(
one,
1,
0
)
);
longs = (
(
f,
1,
0
),
(
l,
0,
0
),
(
germandbls,
0,
0
)
);
m = (
(
h,
0,
0
),
(
n,
1,
0
),
(
r,
0,
0
),
(
w,
0,
0
)
);
mu = (
(
u,
1,
0
)
);
n = (
(
h,
0,
0
),
(
m,
0,
0
),
(
r,
0,
0
),
(
u,
1,
0
),
(
v,
0,
0
)
);
nine = (
(
zero,
1,
0
),
(
six,
1,
0
),
(
eight,
1,
0
)
);
o = (
(
b,
0,
0
),
(
c,
1,
0
),
(
d,
0,
0
),
(
eth,
0,
0
),
(
e,
1,
0
),
(
g,
0,
0
),
(
p,
0,
0
),
(
q,
0,
0
)
);
oe = (
(
ae,
1,
0
),
(
e,
1,
0
),
(
o,
1,
0
)
);
one = (
(
I,
1,
0
),
(
l,
1,
0
)
);
oslash = (
(
o,
1,
0
)
);
p = (
(
b,
1,
0
),
(
c,
0,
0
),
(
e,
0,
0
),
(
n,
0,
0
),
(
o,
1,
0
)
);
product = (
(
H,
1,
0
)
);
q = (
(
d,
1,
0
),
(
c,
0,
0
),
(
e,
0,
0
),
(
g,
0,
0
),
(
o,
1,
0
)
);
question = (
(
two,
1,
0
),
(
period,
1,
0
),
(
exclam,
1,
0
)
);
r = (
(
h,
0,
0
),
(
m,
0,
0
),
(
n,
1,
0
)
);
seven = (
(
T,
0,
0
)
);
six = (
(
zero,
1,
0
),
(
five,
1,
0
),
(
eight,
1,
0
),
(
nine,
0,
0
)
);
t = (
(
f,
1,
0
),
(
l,
0,
0
)
);
thorn = (
(
b,
1,
0
),
(
h,
1,
0
),
(
p,
1,
0
)
);
three = (
(
B,
0,
0
),
(
eight,
1,
0
)
);
two = (
(
question,
1,
0
)
);
u = (
(
n,
1,
0
),
(
v,
0,
0
)
);
uni0237 = (
(
i,
0,
0
),
(
idotless,
1,
0
),
(
l,
0,
0
),
(
n,
0,
0
)
);
uni20B9 = (
(
R,
1,
0
)
);
uni20BD = (
(
P,
1,
0
)
);
uni20BF = (
(
B,
1,
0
)
);
v = (
(
n,
0,
0
),
(
w,
0,
0
),
(
x,
0,
0
),
(
y,
1,
0
)
);
w = (
(
v,
0,
0
),
(
m,
0,
0
)
);
x = (
(
k,
1,
0
),
(
v,
0,
0
),
(
z,
0,
0
)
);
y = (
(
v,
1,
0
)
);
yen = (
(
Y,
1,
0
)
);
z = (
(
x,
0,
0
)
);
zero = (
(
O,
1,
0
)
);
};
};
versionMajor = 1;
versionMinor = 0;
}
